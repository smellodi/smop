<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Common app elements -->

    <Style x:Key="InputFocus">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="-2" StrokeThickness="1" Stroke="{StaticResource BrushBorder}" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Combobox -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="18" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" 
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    Background="{StaticResource BrushButtonLight}" 
                    BorderBrush="{StaticResource BrushBorderDark}"
                    BorderThickness="1" />
            <Border Grid.Column="0"
                    CornerRadius="0" 
                    Margin="1" 
                    BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource BrushFont}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonHover}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonFocused}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonDisabled}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BrushBorderDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="Background" Value="{StaticResource BrushBorderLight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            BorderBrush="{TemplateBinding Background}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter Margin="6,4"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonHover}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonFocused}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Template="{StaticResource ComboBoxToggleButton}" 
                                      Grid.Column="0" 
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="6,3,23,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}" 
                                 Template="{StaticResource ComboBoxTextBox}" 
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3,3,23,3"
                                 Focusable="True" 
                                 Background="{StaticResource BrushInput}"
                                 Foreground="{StaticResource BrushFontDark}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource BrushBorderLight}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource BrushBorder}"/>
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource BrushBorderFocused}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

        </Style.Triggers>
    </Style>

    <!-- Button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BrushButton}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="ToolTipService.VerticalOffset" Value="-48"/>
        <Setter Property="ToolTipService.HorizontalOffset" Value="-12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                            <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonHover}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- RepeatButton -->
    <Style TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{StaticResource BrushButton}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                            <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonHover}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ToggleButton -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource BrushButton}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                            <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonHover}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonFocused}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox -->
    <ControlTemplate x:Key="TextBoxTemplateNormal" TargetType="{x:Type TextBox}">
        <Border x:Name="Border"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost"
                          Focusable="false"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BrushBorder}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BrushBorderFocused}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextBoxTemplateError" TargetType="{x:Type TextBox}">
        <Border x:Name="Border"
                BorderBrush="Red"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost"
                          Focusable="false"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,4"/>
        <Setter Property="Background" Value="{StaticResource BrushInput}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
        <Setter Property="BorderThickness" Value="0,1" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorderLight}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="CaretBrush" Value="{StaticResource BrushFontDark}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
        <Setter Property="Template" Value="{StaticResource TextBoxTemplateNormal}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BrushFontDarkDisabled}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="{StaticResource BrushInputDark}"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFontFocused}"/>
                <Setter Property="CaretBrush" Value="{StaticResource BrushFontFocused}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Checkbox -->
    <Style TargetType="CheckBox">
        <Setter Property="Background" Value="{StaticResource BrushInput}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Name="Decorator"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}">
                        <BulletDecorator.Bullet>
                            <Grid
                                Height="{Binding ActualHeight, ElementName=Decorator}"
                                Width="{Binding ActualHeight, ElementName=Decorator}">
                                <Border Name="CheckOuter"
                                        Margin="4"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2"/>
                                <Border Name="CheckMark"
                                        CornerRadius="0"
                                        Margin="8"
                                        Background="{TemplateBinding BorderBrush}"
                                        Visibility="Hidden"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock Margin="5,0,8,1" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center">
                            <ContentPresenter/>
                        </TextBlock>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BrushFontDarkDisabled}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Radio button-->
    <Style TargetType="RadioButton">
        <Setter Property="Background" Value="{StaticResource BrushInput}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <BulletDecorator.Bullet>
                            <Grid 
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border Name="RadioOuter"
                                        Background="Transparent"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Border Name="RadioMark"
                                        CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                        Margin="4"
                                        Background="{TemplateBinding BorderBrush}"
                                        Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <TextBlock Margin="3,0,0,0"
                                   Foreground="{TemplateBinding Foreground}"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}">
                            <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BrushFontDarkDisabled}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListViewItem -->
    <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <!--Setter Property="OverridesDefaultStyle" Value="true"/-->
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="Background" Value="{StaticResource BrushButtonPressed}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Padding="4"
                            SnapsToDevicePixels="true"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="1"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonFocused}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BrushButtonHover}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListView -->
    <Style x:Key="{x:Type ListView}" TargetType="ListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <!--Setter Property="OverridesDefaultStyle" Value="true"/-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border"
                            BorderThickness="1"
                            BorderBrush="{StaticResource BrushBorderDark}"
                            Background="{StaticResource BrushPanelLightest}">
                        <ScrollViewer>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushBorderDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ScrollBar-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{StaticResource BrushButtonLight}" />
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDark}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">
                        <Path x:Name="Arrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Content, 
                            RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="{StaticResource BrushFont}">
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushPanelLight}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BrushBorderLightDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{StaticResource BrushPanelLight}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Name="Border" 
                            BorderThickness="1"
                            BorderBrush="{StaticResource BrushBorderDark}"
                            Background="{TemplateBinding Background}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushPanelLight}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonPressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    Background="{StaticResource BrushButtonDisabled}" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track" Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb >
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0"
                           BorderBrush="{StaticResource BrushBorderDark}"
                           Background="{StaticResource BrushButtonLight}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    Background="{StaticResource BrushButtonDisabled}" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track x:Name="PART_Track" Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="1,0,1,0"
                           BorderBrush="{StaticResource BrushBorderDark}"
                           Background="{StaticResource BrushButtonLight}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TabControl -->
    <Style TargetType="TabControl">
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <!-- TabItem -->
    <Style TargetType="TabItem">
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
        <Setter Property="Background" Value="{StaticResource BrushButtonLight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDark}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="Root">
                        <Border x:Name="Border"
                                Margin="0,0,0,-1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0,2,0,0">
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="12,8"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource BrushButtonHover}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
                <Setter Property="Background" Value="{StaticResource BrushPanelLightest}"/>
                <Setter Property="BorderThickness" Value="1,1,1,0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
            </Trigger>
        </Style.Triggers>

    </Style>
    
    <!-- Progress bar -->
    <Style x:Key="{x:Type ProgressBar}"
           TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="2"
                          MinWidth="16"
                          Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <!--Storyboard>
                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                    Storyboard.TargetName="PART_GlowRect"
                                                                    Storyboard.TargetProperty="Visibility">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Collapsed}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard-->

                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                        Storyboard.TargetName="PART_Indicator"
                                                                        Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Track"
                                BorderThickness="1"
                                BorderBrush="{StaticResource BrushBorderDark}"/>
                        <Border x:Name="PART_Indicator"
                                BorderThickness="1"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Foreground}"
                                BorderBrush="{StaticResource BrushBorderLight}"
                                Margin="1">
                            <Grid x:Name="Animation" ClipToBounds="True" Margin="-1">
                                <Rectangle x:Name="PART_GlowRect"
                                           MaxWidth="100"
                                           HorizontalAlignment="Left"
                                           Fill="{StaticResource BrushBorderDark}"
                                           Margin="-100,0,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsIndeterminate" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource BrushFont}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushBorderLight}"/>
    </Style>


</ResourceDictionary>