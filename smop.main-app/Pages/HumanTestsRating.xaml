<Page x:Class="Smop.MainApp.Pages.HumanTestRating"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      xmlns:utils="clr-namespace:Smop.MainApp.Utils"
      xmlns:local="clr-namespace:Smop.MainApp.Controls"
      xmlns:ht="clr-namespace:Smop.MainApp.Controllers.HumanTests"
      mc:Ignorable="d" 
      d:DesignHeight="746"
      d:DesignWidth="800"
      DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}"
      Title="Pulse"
      Focusable="True"
      KeyDown="Page_KeyDown"
      Loaded="Page_Loaded"
      Unloaded="Page_Unloaded">

    <Page.Resources>
        <utils:BoolToVisibilityConverter x:Key="bool2vis"/>
        <sys:Boolean x:Key="inverted">True</sys:Boolean>

        <Style x:Key="Header" TargetType="Label">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Margin" Value="0,12,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
        </Style>
        <Style x:Key="Stage" TargetType="Label">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
            <Setter Property="Padding" Value="0,8,0,4"/>
        </Style>
        <Style x:Key="Rating" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Background" Value="{x:Static ht:Brushes.Active}"/>
            <Setter Property="Foreground" Value="{x:Static ht:Brushes.Foreground}"/>
            <Setter Property="BorderBrush" Value="{x:Static ht:Brushes.Selected}"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="{x:Static ht:Brushes.Selected}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsChecked" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{x:Static ht:Brushes.Focused}"/>
                </MultiTrigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{x:Static ht:Brushes.Selected}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="sctScale"/>
        </Grid.LayoutTransform>

        <TextBlock Grid.Row="0" Style="{StaticResource PageTitle}"
            Text="Rating"/>

        <Grid Grid.Row="1"
              Visibility="{Binding IsInstruction, Converter={StaticResource bool2vis}, ConverterParameter={StaticResource inverted}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0"
                        VerticalAlignment="Center">
                <Label x:Name="lblInfo"
                       Content="{Binding StageInfo}"
                       HorizontalAlignment="Center"/>
                <local:WaitingInstruction x:Name="wtiWaiting"
                                          Margin="24,12"
                                          Height="60"
                                          Width="200"
                                          VerticalContentAlignment="Bottom"/>

                <Button IsEnabled="{Binding CanReleaseOdor}"
                        Width="146"
                        Content="{Binding Path=Strings.ReleaseOdor}"
                        Click="ReleaseOdor_Click"/>
            </StackPanel>

            <Grid x:Name="grdRatingButtons" Grid.Row="1"
                  Width="600"
                  Height="320">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!-- to be filled in the colde -->
            </Grid>

        </Grid>

        <TextBlock Grid.Row="1"
                   Visibility="{Binding IsInstruction, Converter={StaticResource bool2vis}}"
                   FontSize="20"
                   Width="360"
                   TextWrapping="Wrap"
                   TextAlignment="Center"
                   VerticalAlignment="Center"
                   Text="{Binding Path=Strings.RatingInstruction}"/>

        <StackPanel Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center">
            <Button x:Name="btnSubmit"
                    Style="{StaticResource Next}"
                    IsEnabled="{Binding CanSubmit}"
                    Content="{Binding SubmitButtonText}"
                    Click="Submit_Click"/>
        </StackPanel>

        <Label x:Name="lblZoom" Style="{StaticResource ZoomIndicator}"/>
        <Label x:Name="lblDebug" Style="{StaticResource DebugWarning}" Visibility="Collapsed"/>
    </Grid>
</Page>
