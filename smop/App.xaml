<Application x:Class="Smop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             Startup="Application_Startup"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!-- Theme colors -->
            
            <!-- Brown -->
            <!--Color x:Key="ColorLight">#FFD1AA</Color>
            <Color x:Key="ColorLightDarker">#D49A6A</Color>
            <Color x:Key="ColorDarkLighter">#AA6C39</Color>
            <Color x:Key="ColorDark">#804515</Color>
            <Color x:Key="ColorDarkDarker">#553600</Color>

            <Color x:Key="ColorDisabledLight">#E0E0E0</Color>
            <Color x:Key="ColorDisabledLightDarker">#959595</Color>
            <Color x:Key="ColorDisabledDarkLighter">#7F7F7F</Color>
            <Color x:Key="ColorDisabledDark">#696969</Color>
            <Color x:Key="ColorDisabledDarkDarker">#606060</Color-->

            <!-- Malachite -->
            <!--Color x:Key="ColorLight">#B2CECE</Color>
            <Color x:Key="ColorLightDarker">#548D8D</Color>
            <Color x:Key="ColorDarkLighter">#226666</Color>
            <Color x:Key="ColorDark">#043F3F</Color>
            <Color x:Key="ColorDarkDarker">#001919</Color>

            <Color x:Key="ColorDisabledLight">#E0E0E0</Color>
            <Color x:Key="ColorDisabledLightDarker">#959595</Color>
            <Color x:Key="ColorDisabledDarkLighter">#7F7F7F</Color>
            <Color x:Key="ColorDisabledDark">#696969</Color>
            <Color x:Key="ColorDisabledDarkDarker">#606060</Color-->

            <!-- Venla -->
            <Color x:Key="ColorLight">#A0FCFA</Color>
            <Color x:Key="ColorLightDarker">#459D96</Color>
            <Color x:Key="ColorDarkLighter">#366764</Color>
            <Color x:Key="ColorDark">#8020A9</Color>
            <Color x:Key="ColorDarkDarker">#51137A</Color>

            <Color x:Key="ColorDisabledLight">#E0E0E0</Color>
            <Color x:Key="ColorDisabledLightDarker">#959595</Color>
            <Color x:Key="ColorDisabledDarkLighter">#7F7F7F</Color>
            <Color x:Key="ColorDisabledDark">#696969</Color>
            <Color x:Key="ColorDisabledDarkDarker">#606060</Color>


            <!-- Brushes -->
            <SolidColorBrush x:Key="BrushFont" Color="{StaticResource ColorLight}" />
            <SolidColorBrush x:Key="BrushFontDisabled" Color="{StaticResource ColorDisabledLight}" />
            <SolidColorBrush x:Key="BrushFontDark" Color="{StaticResource ColorDark}" />
            <SolidColorBrush x:Key="BrushFontDarkDisabled" Color="{StaticResource ColorDisabledDark}" />
            <SolidColorBrush x:Key="BrushInput" Color="{StaticResource ColorLight}" />
            <SolidColorBrush x:Key="BrushButton" Color="{StaticResource ColorDarkLighter}" />
            <SolidColorBrush x:Key="BrushButtonHover" Color="{StaticResource ColorLightDarker}" />
            <SolidColorBrush x:Key="BrushButtonPressed" Color="{StaticResource ColorDarkDarker}" />
            <SolidColorBrush x:Key="BrushButtonFocused" Color="{StaticResource ColorDark}" />
            <SolidColorBrush x:Key="BrushButtonDisabled" Color="{StaticResource ColorDisabledDarkLighter}" />
            <SolidColorBrush x:Key="BrushBorder" Color="{StaticResource ColorDark}" />
            <SolidColorBrush x:Key="BrushBorderFocused" Color="{StaticResource ColorDarkDarker}" />
            <SolidColorBrush x:Key="BrushBorderLight" Color="{StaticResource ColorDarkLighter}" />
            <SolidColorBrush x:Key="BrushBorderDisabled" Color="{StaticResource ColorDisabledDarkDarker}" />
            <SolidColorBrush x:Key="BrushHeaderBackground" Color="{StaticResource ColorDark}" />
            <SolidColorBrush x:Key="BrushHeaderBackgroundDisabled" Color="{StaticResource ColorDisabledDark}" />
            <SolidColorBrush x:Key="BrushPanel" Color="{StaticResource ColorDark}" />
            <SolidColorBrush x:Key="BrushPanelLight" Color="{StaticResource ColorLightDarker}" />
            <SolidColorBrush x:Key="BrushPanelLightest" Color="{StaticResource ColorLight}" />
            <SolidColorBrush x:Key="BrushPanelDisabled" Color="{StaticResource ColorDisabledDark}" />
            <SolidColorBrush x:Key="BrushPanelDisabledLight" Color="{StaticResource ColorDisabledLightDarker}" />

            
            <!-- Common app elements -->

            <Style x:Key="InputFocus">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="-2" StrokeThickness="1" Stroke="{StaticResource BrushBorder}" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Combobox -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="18" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border" 
                            Grid.ColumnSpan="2"
                            CornerRadius="0"
                            Background="{StaticResource BrushButton}" 
                            BorderBrush="{StaticResource BrushBorder}"
                            BorderThickness="1" />
                    <Border Grid.Column="0"
                            CornerRadius="0" 
                            Margin="1" 
                            BorderThickness="0,0,1,0" />
                    <Path x:Name="Arrow"
                          Grid.Column="1"     
                          Fill="{StaticResource BrushFont}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonHover}" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonFocused}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonDisabled}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}" />
                        <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BrushBorderDisabled}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
                <Setter Property="Background" Value="{StaticResource BrushButton}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Name="Border"
                                    BorderBrush="{TemplateBinding Background}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter Margin="6,4"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonHover}"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                                    <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonFocused}"/>
                                </Trigger>
                                <!--MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsHighlighted" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BrushButtonHover}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="40"/>
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Name="ToggleButton" 
                                              Template="{StaticResource ComboBoxToggleButton}" 
                                              Grid.Column="0" 
                                              Focusable="false"
                                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                                <ContentPresenter Name="ContentSite"
                                                  IsHitTestVisible="False"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="6,3,23,3"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left" />
                                <TextBox x:Name="PART_EditableTextBox"
                                         Style="{x:Null}" 
                                         Template="{StaticResource ComboBoxTextBox}" 
                                         HorizontalAlignment="Left" 
                                         VerticalAlignment="Center" 
                                         Margin="3,3,23,3"
                                         Focusable="True" 
                                         Background="{StaticResource BrushInput}"
                                         Foreground="{StaticResource BrushFontDark}"
                                         Visibility="Hidden"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True" 
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Grid Name="DropDown"
                                          SnapsToDevicePixels="True"                
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                                Background="{StaticResource BrushButton}"
                                                BorderThickness="1"
                                                BorderBrush="{StaticResource BrushBorder}"/>
                                        <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                                    <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEditable"  Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource BrushBorderFocused}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>

                </Style.Triggers>
            </Style>

            <!-- Button -->
            <Style TargetType="{x:Type Button}">
                <!--Setter Property="Background" Value="LightGray"/>
                <Setter Property="BorderBrush" Value="Gray"/-->
                <Setter Property="Background" Value="{StaticResource BrushButton}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,1">
                                <ContentPresenter Margin="8,4"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderThickness" Value="2"/>
                                </Trigger>
                                <!--Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" Value="DarkGray"/>
                                    <Setter Property="Background" Value="WhiteSmoke"/>
                                    <Setter Property="Foreground" Value="DarkGray"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                    <Setter Property="BorderBrush" Value="DodgerBlue"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="LightSkyBlue"/>
                                    <Setter Property="BorderBrush" Value="DodgerBlue"/>
                                </Trigger-->
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                                    <Setter Property="Background" Value="{StaticResource BrushButtonDisabled}"/>
                                    <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BrushButtonHover}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource BrushBorderFocused}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{StaticResource BrushButtonPressed}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- TextBox -->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="Padding" Value="4,0"/>
                <Setter Property="Background" Value="{StaticResource BrushInput}"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorderLight}"/>
                <Setter Property="SelectionBrush" Value="{StaticResource BrushBorder}"/>
                <Setter Property="CaretBrush" Value="{StaticResource BrushFontDark}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="false"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BrushBorder}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BrushBorderFocused}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource BrushFontDarkDisabled}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <!-- Checkbox -->
            <Style TargetType="CheckBox">
                <Setter Property="Margin" Value="0,0,8,0"/>
                <Setter Property="Background" Value="{StaticResource BrushInput}"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <BulletDecorator VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0,2,0,0">
                                <BulletDecorator.Bullet>
                                    <Grid Height="16" Width="16">
                                        <Border Name="CheckOuter"
                                                Background="Transparent"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2"/>
                                        <Border Name="CheckMark"
                                                CornerRadius="0"
                                                Margin="4"
                                                Background="{TemplateBinding BorderBrush}"
                                                Visibility="Hidden"/>
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <TextBlock Margin="3,0,0,1" Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter />
                                </TextBlock>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource BrushFontDarkDisabled}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Radio button-->
            <Style TargetType="RadioButton">
                <Setter Property="Background" Value="{StaticResource BrushInput}"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFontDark}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource InputFocus}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <BulletDecorator.Bullet>
                                    <Grid 
                                        Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Border Name="RadioOuter"
                                                Background="Transparent"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Border Name="RadioMark"
                                                CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                Margin="4"
                                                Background="{TemplateBinding BorderBrush}"
                                                Visibility="Hidden" />
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <TextBlock Margin="3,0,0,0" Foreground="{TemplateBinding Foreground}">
                                    <ContentPresenter />
                                </TextBlock>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource BrushFontDarkDisabled}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>



            <!-- Each page elements -->
            <Style x:Key="DebugWarning" TargetType="Label">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="#FFF9A3A3"/>
                <Setter Property="Content" Value="DEBUG MODE"/>
                <Setter Property="Margin" Value="4"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Width" Value="120"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Grid.RowSpan" Value="64"/>
                <Setter Property="Grid.ColumnSpan" Value="64"/>
                <Setter Property="Panel.ZIndex" Value="1"/>
            </Style>
            <Style x:Key="PageTitle" TargetType="TextBlock">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontFamily" Value="Lucida Sans"/>
                <Setter Property="Background" Value="{StaticResource BrushHeaderBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Padding" Value="0,8" />
                
            </Style>
            <Style x:Key="Next" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="MinWidth" Value="100"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="Margin" Value="12"/>
            </Style>
            <Style x:Key="Buttons" TargetType="WrapPanel">
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Grid.ColumnSpan" Value="10"/>
            </Style>

            <!-- Setup page elements -->
            <Style x:Key="Form" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush" Value="{StaticResource BrushBorderDisabled}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FormHeader" TargetType="{x:Type Label}">
                <Setter Property="Margin" Value="0,0,0,10"/>
                <Setter Property="Background" Value="{StaticResource BrushHeaderBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource BrushFont}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource BrushHeaderBackgroundDisabled}"/>
                        <Setter Property="Foreground" Value="{StaticResource BrushFontDisabled}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="HorizontalLine" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="{StaticResource BrushBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Height" Value="1"/>
                <Setter Property="Margin" Value="4,0,4,8"/>
            </Style>
            <Style x:Key="FormRowHeader" TargetType="{x:Type TextBlock}">
                <Setter Property="Width" Value="130"/>
                <Setter Property="DockPanel.Dock" Value="Left"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="8,6,8,8"/>
            </Style>
            <Style x:Key="FormRowHeaderLow" TargetType="{x:Type TextBlock}">
                <Setter Property="Width" Value="120"/>
                <Setter Property="DockPanel.Dock" Value="Left"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Margin" Value="8,8,8,12"/>
            </Style>
            <Style x:Key="FormRow" TargetType="UserControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="UserControl">
                            <DockPanel>
                                <TextBlock Style="{DynamicResource FormRowHeader}"
                                           Text="{TemplateBinding Tag}"/>
                                <ContentPresenter Margin="0,0,8,8"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="FormRowLow" TargetType="UserControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="UserControl">
                            <DockPanel>
                                <TextBlock Style="{DynamicResource FormRowHeaderLow}"
                                           Text="{TemplateBinding Tag}"/>
                                <ContentPresenter Margin="0,0,8,8"/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ValueWithUnit" TargetType="UserControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="UserControl">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="45"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0"/>
                                <TextBlock Grid.Column="1"
                                           Text="{TemplateBinding Tag}"
                                           Margin="4,0,0,0"
                                           DockPanel.Dock="Right"
                                           VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ValueWithLabelAbove" TargetType="UserControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="UserControl">
                            <DockPanel>
                                <TextBlock Text="{TemplateBinding Tag}"
                                           Margin="4,5,0,5"
                                           DockPanel.Dock="Top"/>
                                <ContentPresenter/>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </Application.Resources>
</Application>
